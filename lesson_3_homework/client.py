""" Функционал.
Первая часть домашнего задания будет заключаться в реализации простого клиент-серверного
    взаимодействия по протоколу JIM (JSON instant messaging):
клиент отправляет запрос серверу;
сервер отвечает соответствующим кодом результата.
Клиент и сервер должны быть реализованы в виде отдельных скриптов, содержащих соответствующие
    функции.
Функции клиента:
сформировать presence-сообщение;
отправить сообщение серверу;
получить ответ сервера;
разобрать сообщение сервера;
параметры командной строки скрипта client.py <addr> [<port>]:
addr - ip-адрес сервера; port - tcp-порт на сервере, по умолчанию 7777."""
from socket import socket, AF_INET, SOCK_STREAM

# # IP адрес по умолчанию для подключения клиента
ADDR = "127.0.0.1"

try:
    while True:
        CLIENT_SOCK = socket(AF_INET, SOCK_STREAM)  # Создать сокет TCP
        CLIENT_SOCK.connect(('localhost', 7777))  # Соединиться с сервером
        DATA = CLIENT_SOCK.recv(1024)  # Принять не более 1024 байтов данных
        print(f"Сообщение: {DATA.decode('utf-8')} было отправлено клиентом: {ADDR}")
        MSG = "Привет, сервер"
        CLIENT_SOCK.send(MSG.encode('utf-8'))
        print(f"Сообщение от сервера: {DATA.decode('utf-8')} длиной {len(DATA)} байт")
        CLIENT_SOCK.close()
finally:
    CLIENT_SOCK.close()
